@model TruYumCaseStudyMVC.Models.MenuItemViewModel
@{ ViewBag.Title = "Save - TruYum";
    Layout = "~/Views/Shared/_Layout.cshtml"; }

@if (Model.MenuItem is null)
{
<h1>Create</h1> }
else
{
<h1>Edit</h1>}
<hr />
@using (Html.BeginForm("Modify", "MenuItems", FormMethod.Post, new { @class = "form-horizontal" }))
{
<div class="form-group">
    @Html.LabelFor(m => m.MenuItem.Name, new { @class = "col-lg-2 control-label" })
    <div class="col-lg-10">
        @Html.TextBoxFor(m => m.MenuItem.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.MenuItem.Name)
    </div>
</div>
                <div class="form-group">
                    @Html.LabelFor(m => m.MenuItem.FreeDelivery, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10 my-checkbox">
                        @Html.CheckBoxFor(m => m.MenuItem.FreeDelivery, new { @class = "checkbox checkbox-inline" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.MenuItem.Price, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @Html.TextBoxFor(m => m.MenuItem.Price, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.MenuItem.Price)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.MenuItem.DateOfLaunch, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @Html.TextBoxFor(m => m.MenuItem.DateOfLaunch, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.MenuItem.DateOfLaunch)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.MenuItem.Active, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10 my-checkbox">
                        @Html.CheckBoxFor(m => m.MenuItem.Active, new { @class = "checkbox checkbox-inline" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.MenuItem.Category, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @Html.DropDownListFor(m => m.MenuItem.CategoryId, new SelectList(Model.Categories, "Id", "Name"), new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-lg-10 col-lg-offset-2">
                        @if (Model.MenuItem is null)
                        {
                    <button type="submit" class="btn btn-primary">Create</button>
                                        <button type="reset" class="btn btn-danger">Reset</button> }
                                    else
                                    {
                    <button type="submit" class="btn btn-primary">Save</button>}
                    </div>
                  </div>
                 <p class="h4">@Html.ActionLink("Back To List", "Admin", "MenuItems")</p>
                 @Html.HiddenFor(m => m.MenuItem.Id)}

@section scripts
{
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
}